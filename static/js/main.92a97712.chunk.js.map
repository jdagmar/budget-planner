{"version":3,"sources":["components/Icons.tsx","helpers/GetIcon.tsx","components/Input.tsx","components/Header.tsx","components/ExpenseSummary.tsx","components/Button.tsx","components/ExpenseForm.tsx","components/ExpenseList.tsx","components/IncomeForm.tsx","App.tsx","index.tsx"],"names":["RemoveIcon","props","width","size","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","className","cssClass","x1","y1","x2","y2","MoneyIcon","strokeWidth","strokeLinecap","strokeLinejoin","aria-hidden","d","LabelIcon","CloseIcon","CreditCardIcon","GetIcon","icon","Input","id","label","toLowerCase","htmlFor","type","value","onChange","e","target","Header","ExpenseSummary","sumUpExpenses","expenses","reduce","x","y","map","expense","cost","percentageSpent","income","parseInt","calcPrecentageSpent","setIncomeForm","accountBalance","isNaN","calcAccountBalance","style","currency","Button","color","getButtonStyle","onClick","isTextVisible","text","ExpenseForm","onSubmit","expenseForm","title","preventDefault","undefined","error","newTitle","toString","newCost","ExpenseList","expenseListItems","length","IncomeForm","newIncome","incomeFormatError","newCurrency","currencyFormatError","updateLocalStorageReducer","state","action","newState","reducer","localStorage","setItem","JSON","stringify","payload","isExpenseFormVisible","addExpenseForm","updatedExpenseList","filter","initState","parse","getItem","App","useReducer","dispatch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a97712.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  cssClass?: string;\n  size: number;\n};\n\nexport const RemoveIcon = (props: Props) => {\n  return (\n    // <svg\n    //   viewBox=\"0 0 24 24\"\n    //   fill=\"none\"\n    //   stroke=\"currentColor\"\n    //   strokeWidth={2}\n    //   strokeLinecap=\"round\"\n    //   strokeLinejoin=\"round\"\n    //   aria-hidden=\"true\"\n    //   width={`${props.size}em`}\n    //   height={`${props.size}em`}\n    //   className={props.cssClass}\n    // >\n    //   <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 002-2V6a2 2 0 00-2-2zM18 9l-6 6M12 9l6 6\" />\n    // </svg>\n    <svg\n      width={`${props.size}em`}\n      height={`${props.size}em`}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      className={props.cssClass}\n    >\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n    </svg>\n  );\n};\n\nexport const MoneyIcon = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      aria-hidden=\"true\"\n      width={`${props.size}em`}\n      height={`${props.size}em`}\n      className={props.cssClass}\n    >\n      <path d=\"M12 1v22M17 5H9.5a3.5 3.5 0 000 7h5a3.5 3.5 0 010 7H6\" />\n    </svg>\n  );\n};\n\nexport const LabelIcon = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      aria-hidden=\"true\"\n      width={`${props.size}em`}\n      height={`${props.size}em`}\n      className={props.cssClass}\n    >\n      <path d=\"M20.59 13.41l-7.17 7.17a2 2 0 01-2.83 0L2 12V2h10l8.59 8.59a2 2 0 010 2.82zM7 7h.01\" />\n    </svg>\n  );\n};\n\nexport const CloseIcon = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      aria-hidden=\"true\"\n      width={`${props.size}em`}\n      height={`${props.size}em`}\n      className={props.cssClass}\n    >\n      <path d=\"M18 6L6 18M6 6l12 12\" />\n    </svg>\n  );\n};\n\nexport const CreditCardIcon = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n      width={`${props.size}em`}\n      height={`${props.size}em`}\n      className={props.cssClass}\n      fill=\"currentColor\"\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\" />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport {\n  LabelIcon,\n  MoneyIcon,\n  RemoveIcon,\n  CloseIcon,\n  CreditCardIcon,\n} from '../components/Icons';\n\nexport const GetIcon = (size: number, icon?: string, cssClass?: string) => {\n  switch (icon) {\n    case 'label':\n      return <LabelIcon cssClass={cssClass} size={size} />;\n    case 'money':\n      return <MoneyIcon cssClass={cssClass} size={size} />;\n    case 'remove':\n      return <RemoveIcon cssClass={cssClass} size={size} />;\n    case 'close':\n      return <CloseIcon cssClass={cssClass} size={size} />;\n    case 'credit':\n      return <CreditCardIcon cssClass={cssClass} size={size} />;\n    default:\n      return null;\n  }\n};\n","import React from 'react';\nimport { GetIcon } from '../helpers/GetIcon';\n\ntype Props = {\n  label: string;\n  type: string;\n  value: string;\n  icon?: string;\n  onChange: (value: string) => void;\n};\n\nexport const Input = (props: Props) => {\n  const id = `${props.label.toLowerCase()}-input`;\n\n  return (\n    <div className=\"mb-4\">\n      <label\n        htmlFor={id}\n        className=\"block font-bold font-sans mb-2  tracking-wider text-md\"\n      >\n        {props.label}\n      </label>\n      <div className=\"relative\">\n        <input\n          id={id}\n          type={props.type}\n          className={` bg-transparent border border-gray-600 text-gray-600 p-2 w-full rounded-sm  ${\n            props.icon ? 'pl-8' : 'pl-2'\n          }`}\n          value={props.value}\n          onChange={e => {\n            props.onChange(e.target.value);\n          }}\n        />\n        <div className=\"absolute top-0 bottom-0 text-gray-600\">\n          <div className=\"flex items-center h-full ml-2\">\n            {GetIcon(1, props.icon)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Header = () => {\n  return (\n    <header className=\"mb-2 px-3 py-4 border-gray-200 border-b\">\n      <h1 className=\"font-overpass font-bold text-xl\">Budget Planner</h1>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Expense, SetIncomeForm } from '../State';\n\ntype Props = {\n  expenses: Array<Expense>;\n  currency: string | undefined;\n  setIncomeForm: SetIncomeForm;\n};\n\nexport const ExpenseSummary = (props: Props) => {\n  const sumUpExpenses = (expenses: Array<number>) => {\n    return expenses.reduce((x, y) => x + y, 0);\n  };\n\n  const calcAccountBalance = (income: string = '0') => {\n    if (!isNaN(parseInt(income))) {\n      return parseInt(income) - sumUpExpenses(expenses);\n    }\n    return 'unable to calculate';\n  };\n\n  const calcPrecentageSpent = (expenses: number, income: string = '0') => {\n    return (expenses / parseInt(income)) * 100;\n  };\n\n  const expenses = props.expenses.map(expense => +expense.cost);\n  const percentageSpent = calcPrecentageSpent(\n    sumUpExpenses(expenses),\n    props.setIncomeForm.income\n  );\n  const accountBalance = calcAccountBalance(props.setIncomeForm.income);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"shadow w-full bg-grey-light rounded\">\n        <div\n          className={`${\n            percentageSpent > 100\n              ? 'bg-red-700 text-white'\n              : percentageSpent < 100\n              ? 'bg-peach-600'\n              : 'bg-gray-400'\n          } leading-tight py-2 text-center max-w-full`}\n          style={{\n            width: percentageSpent + '%',\n          }}\n        >\n          <p className=\"mx-2\">\n            {sumUpExpenses(expenses)} {props.currency}\n          </p>\n        </div>\n      </div>\n\n      <p className=\"flex justify-end items-center mt-4 text-sm\">\n        Remaining:\n        <div\n          className={`${\n            accountBalance < 0 ? 'text-red-700' : ''\n          } px-2 flex items-center`}\n        >\n          {accountBalance} {props.currency}\n        </div>\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { GetIcon } from '../helpers/GetIcon';\n\ntype Props = {\n  text: string;\n  isTextVisible: boolean;\n  color: string;\n  fill: 'solid' | 'outline' | 'none';\n  onClick?: () => void;\n  icon?: string;\n};\n\nexport const Button = (props: Props) => {\n  const getButtonStyle = (color: string, fill: string) => {\n    switch (fill) {\n      case 'solid':\n        return `bg-${color}-800 hover:bg-${color}-900 focus:bg-${color}-900 transition motion-reduce:transition-none duration-700 ease-in-out text-white rounded-sm w-full mr-2 p-2 font-bold`;\n      case 'outline':\n        return `border-${color}-800 hover:border-${color}-900 focus:border-${color}-900 border-2 text-blue-800 w-full mr-2 p-2 font-bold`;\n      default:\n        return 'p-4';\n    }\n  };\n\n  return (\n    <button\n      className={getButtonStyle(props.color, props.fill)}\n      onClick={props.onClick}\n    >\n      <span className={props.isTextVisible ? 'tracking-wide' : 'sr-only'}>\n        {props.text}\n      </span>\n      {GetIcon(1, props.icon)}\n    </button>\n  );\n};\n","import React from 'react';\nimport { AddExpenseForm, Expense } from '../State';\nimport { Button } from './Button';\nimport { Input } from './Input';\n\ntype Props = {\n  expenseForm: AddExpenseForm;\n  onSubmit: (a: Expense) => void;\n  onChange: (a: AddExpenseForm) => void;\n  onClick: () => void;\n};\n\nexport const ExpenseForm = (props: Props) => {\n  return (\n    <div className=\"flex flex-col p-4 absolute bottom-0 z-50 w-full bg-white\">\n      <form\n        onSubmit={e => {\n          const { cost, title } = props.expenseForm;\n\n          e.preventDefault();\n\n          if (\n            cost !== undefined &&\n            title !== undefined &&\n            !isNaN(parseInt(cost))\n          ) {\n            props.onSubmit({\n              cost: parseInt(cost),\n              title: title,\n            });\n          } else {\n            props.onChange({\n              ...props.expenseForm,\n              error:\n                'An expense needs to have a alphabetical title and a numerical cost',\n            });\n          }\n        }}\n      >\n        <p className=\"flex text-md text-red-700 mb-4\">\n          {props.expenseForm.error}\n        </p>\n\n        <div className=\"flex justify-between flex-col\">\n          <Input\n            type=\"text\"\n            label=\"Title\"\n            value={props.expenseForm.title || ''}\n            icon=\"label\"\n            onChange={newTitle =>\n              props.onChange({ ...props.expenseForm, title: newTitle })\n            }\n          />\n          <Input\n            type=\"text\"\n            label=\"Cost\"\n            icon=\"money\"\n            value={props.expenseForm.cost?.toString() || ''}\n            onChange={newCost =>\n              props.onChange({ ...props.expenseForm, cost: newCost })\n            }\n          />\n          <div className=\"flex mt-4\">\n            <Button text=\"Add\" isTextVisible={true} color=\"blue\" fill=\"solid\" />\n            <Button\n              text=\"Cancel\"\n              isTextVisible={true}\n              onClick={props.onClick}\n              color=\"blue\"\n              fill=\"outline\"\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Expense } from '../State';\nimport { Button } from '../components/Button';\n\ntype Props = {\n  expenses: Array<Expense>;\n  onClick: (expense: string) => void;\n};\n\nexport const ExpenseList = (props: Props) => {\n  const expenseListItems = props.expenses.map(expense => {\n    return (\n      <li\n        className=\"flex justify-between items-center mb-4 bg-gray-100 rounded shadow-sm  pl-4\"\n        key={expense.title}\n      >\n        <p className=\"mr-1 w-5/12\">{expense.title}</p>\n        <p className=\"w-5/12\">{expense.cost}</p>\n        <Button\n          text=\"Remove Expense\"\n          isTextVisible={false}\n          icon=\"remove\"\n          onClick={() => props.onClick(expense.title)}\n          color=\"none\"\n          fill=\"none\"\n        />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"mt-8\">\n      <h2 className=\" font-bold text-sm\">Expenses</h2>\n      {expenseListItems.length > 0 ? (\n        <ul className=\"mt-3 mb-8\">{expenseListItems}</ul>\n      ) : (\n        <p className=\" mt-2 mb-5\">Add an expense to get started</p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { SetIncomeForm } from '../State';\nimport { Input } from './Input';\n\ntype Props = {\n  setIncomeForm: SetIncomeForm;\n  onChange: (a: SetIncomeForm) => void;\n};\n\nexport const IncomeForm = (props: Props) => {\n  return (\n    <div className=\"flex\">\n      <div className=\"w-8/12 mr-2\">\n        <Input\n          label=\"Income\"\n          type=\"string\"\n          icon=\"money\"\n          value={props.setIncomeForm.income?.toString() || ''}\n          onChange={newIncome => {\n            props.onChange({\n              ...props.setIncomeForm,\n              income: newIncome,\n              incomeFormatError: isNaN(parseInt(newIncome))\n                ? 'Enter a numerical value'\n                : undefined,\n            });\n          }}\n        />\n        <p className=\"text-sm text-red-700 mb-2\">\n          {props.setIncomeForm.incomeFormatError}\n        </p>\n      </div>\n      <div className=\"w-4/12\">\n        <Input\n          label=\"Currency\"\n          type=\"string\"\n          icon=\"label\"\n          value={props.setIncomeForm.currency || ''}\n          onChange={newCurrency => {\n            props.onChange({\n              ...props.setIncomeForm,\n              currency: newCurrency,\n              currencyFormatError: isNaN(parseInt(newCurrency))\n                ? undefined\n                : 'Enter a alphabetical value',\n            });\n          }}\n        />\n        <p className=\"text-sm text-red-700 mb-2\">\n          {props.setIncomeForm.currencyFormatError}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useReducer } from 'react';\nimport { Action, State } from './State';\nimport {\n  ExpenseForm,\n  ExpenseSummary,\n  Header,\n  ExpenseList,\n  IncomeForm,\n  Button,\n} from './components';\n\nconst updateLocalStorageReducer = (state: State, action: Action): State => {\n  const newState = reducer(state, action);\n  localStorage.setItem('state', JSON.stringify(newState));\n\n  return newState;\n};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'addExpense':\n      return {\n        ...state,\n        expenses: [...state.expenses, action.payload],\n        isExpenseFormVisible: false,\n        addExpenseForm: {},\n      };\n    case 'updateExpenseForm':\n      return {\n        ...state,\n        addExpenseForm: action.payload,\n      };\n    case 'setIncome':\n      return {\n        ...state,\n        income: action.payload.incomeFormatError\n          ? state.income\n          : parseInt(action.payload.income || ''),\n        currency: action.payload.currencyFormatError\n          ? state.currency\n          : action.payload.currency,\n        setIncomeForm: action.payload,\n      };\n    case 'removeExpense':\n      const updatedExpenseList = state.expenses.filter(\n        expense => expense.title !== action.payload\n      );\n\n      return {\n        ...state,\n        expenses: updatedExpenseList,\n      };\n    case 'ToggleExpenseFormVisibility':\n      return {\n        ...state,\n        isExpenseFormVisible: action.payload,\n        addExpenseForm: {},\n      };\n  }\n};\n\nconst initState: State = JSON.parse(\n  localStorage.getItem('state') || 'null'\n) || {\n  expenses: [],\n  income: undefined,\n  currency: undefined,\n  addExpenseForm: {},\n  setIncomeForm: {},\n  isExpenseFormVisible: false,\n};\n\nexport const AppContext = React.createContext([\n  initState,\n  (() => {}) as React.Dispatch<Action>,\n] as [State, React.Dispatch<Action>]);\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(updateLocalStorageReducer, initState);\n\n  return (\n    <main className=\"h-screen relative flex justify-between flex-col max-w-md m-auto bg-white shadow\">\n      {state.isExpenseFormVisible && (\n        <div\n          className=\"max-w-md m-auto bg-black bg-opacity-10 fixed inset-0\"\n          onClick={() => {\n            dispatch({\n              type: 'ToggleExpenseFormVisibility',\n              payload: !state.isExpenseFormVisible,\n            });\n          }}\n        ></div>\n      )}\n      <div>\n        <Header />\n        <div className=\"p-4\">\n          <IncomeForm\n            setIncomeForm={state.setIncomeForm}\n            onChange={income => {\n              dispatch({ type: 'setIncome', payload: income });\n            }}\n          />\n          <ExpenseList\n            expenses={state.expenses}\n            onClick={expense => {\n              dispatch({ type: 'removeExpense', payload: expense });\n            }}\n          />\n          <ExpenseSummary\n            expenses={state.expenses}\n            currency={state.currency}\n            setIncomeForm={state.setIncomeForm}\n          />\n        </div>\n      </div>\n\n      <div>\n        <div className=\"m-4\">\n          <Button\n            text=\"Add expense\"\n            isTextVisible={true}\n            color=\"blue\"\n            fill=\"solid\"\n            onClick={() => {\n              dispatch({\n                type: 'ToggleExpenseFormVisibility',\n                payload: !state.isExpenseFormVisible,\n              });\n            }}\n          />\n        </div>\n\n        {state.isExpenseFormVisible && (\n          <ExpenseForm\n            onSubmit={expense =>\n              dispatch({ type: 'addExpense', payload: expense })\n            }\n            expenseForm={state.addExpenseForm}\n            onChange={expense => {\n              dispatch({ type: 'updateExpenseForm', payload: expense });\n            }}\n            onClick={() => {\n              dispatch({\n                type: 'ToggleExpenseFormVisibility',\n                payload: !state.isExpenseFormVisible,\n              });\n            }}\n          />\n        )}\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/tailwind.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}